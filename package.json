{
  "name": "fpctoolkit",
  "displayName": "FreePascal Toolkit",
  "description": "Free pascal compile and build.",
  "version": "1.2.1",
  "engines": {
    "vscode": "^1.89.0"
  },
  "icon": "images/logo.png",
  "categories": [
    "Programming Languages"
  ],
  "publisher": "coolchyni",
  "author": "coolchyni <coolchyni@gmail.com>",
  "license": "MIT",
  "keywords": [
    "free",
    "pascal",
    "freepascal",
    "fpc",
    "lazarus",
    "objectpascal",
    "delphi"
  ],
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/coolchyni/fpctoolkit.git"
  },
  "bugs": {
    "url": "https://github.com/coolchyni/fpctoolkit/issues"
  },
  "activationEvents": [
    "onView:FpcProjectExplorer",
    "onLanguage:objectpascal",
    "onDebug"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "mcpServerDefinitionProviders": [
      {
        "id": "pascal-mcp-server",
        "label": "Pascal MCP Server"
      }
    ],
    "languages": [
      {
        "id": "objectpascal",
        "aliases": [
          "Object-Pascal"
        ],
        "extensions": [
          ".pas",
          ".pp",
          ".lpr",
          ".inc",
          ".p",
          ".dfm",
          ".fmx",
          ".dpr",
          ".dpk",
          ".lfm",
          ".dpr",
          ".lpr"
        ],
        "configuration": "./pascal-configuration.json"
      },
      {
        "id": "pascal",
        "configuration": "./pascal-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "objectpascal",
        "scopeName": "source.pascal",
        "path": "./syntaxes/fpc.tmLanguage"
      },
      {
        "language": "pascal",
        "scopeName": "source.pascal",
        "path": "./syntaxes/fpc.tmLanguage"
      }
    ],
    "snippets": [
      {
        "language": "objectpascal",
        "path": "./snippets/pascal.json"
      },
      {
        "language": "pascal",
        "path": "./snippets/pascal.json"
      }
    ],
    "commands": [
      {
        "command": "fpctoolkit.project.newproject",
        "title": "%project.newproject%",
        "icon": "$(add)"
      },
      {
        "command": "fpctoolkit.project.build",
        "title": "%project.build%",
        "icon": "$(play)"
      },
      {
        "command": "fpctoolkit.project.rebuild",
        "title": "%project.rebuild%"
      },
      {
        "command": "fpctoolkit.project.clean",
        "title": "%project.clear%"
      },
      {
        "command": "fpctoolkit.project.opensetting",
        "title": "%project.open%"
      },
      {
        "command": "fpctoolkit.project.add",
        "title": "%project.newconfig%"
      },
      {
        "command": "fpctoolkit.project.setdefault",
        "title": "%project.setdefault%"
      },
      {
        "command": "fpctoolkit.project.openWithLazarus",
        "title": "Open with Lazarus",
        "icon": "$(link-external)"
      },
      {
        "command": "fpctoolkit.project.newfromtemplate",
        "title": "%project.newfromtemplate%",
        "icon": "$(file-add)"
      },
      {
        "command": "fpctoolkit.project.inittemplatedir",
        "title": "%project.inittemplatedir%",
        "icon": "$(folder-library)"
      },
      {
        "command": "fpctoolkit.project.inittemplatedirtouser",
        "title": "%project.inittemplatedirtouser%",
        "icon": "$(home)"
      },
      {
        "command": "fpctoolkit.project.opentemplatedir",
        "title": "%project.opentemplatedir%",
        "icon": "$(folder-opened)"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+shift+down",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "key": "ctrl+shift+up",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "key": "ctrl+shift+c",
        "command": "fpctoolkit.code.complete",
        "when": "editorTextFocus && !isInEmbeddedEditor"
      }
    ],
    "taskDefinitions": [
      {
        "type": "fpc",
        "required": [
          "file"
        ],
        "properties": {
          "file": {
            "type": "string",
            "description": "%task.file%"
          },
          "cwd": {
            "type": "string",
            "description": "%task.cwd%"
          },
          "cleanExt": {
            "type": "string",
            "description": "%task.cleanExt%"
          },
          "inherited": {
            "type": "string",
            "description": "%task.inherited%"
          },
          "windows": {
            "type": "object",
            "properties": {
              "customOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "%task.buildOption.customOptions%"
              }
            }
          },
          "linux": {
            "type": "object",
            "properties": {
              "customOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "%task.buildOption.customOptions%"
              }
            }
          },
          "osx": {
            "type": "object",
            "properties": {
              "customOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "%task.buildOption.customOptions%"
              }
            }
          },
          "buildEvent": {
            "type": "object",
            "description": "Event to run command.",
            "properties": {
              "before_build": {
                "type": "array",
                "description": "Run commands before build.",
                "items": {
                  "type": "string"
                }
              },
              "after_build_success": {
                "type": "array",
                "description": "Run commands after build success.",
                "items": {
                  "type": "string"
                }
              },
              "after_build_failure": {
                "type": "array",
                "description": "Run commands after build failure.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "buildOption": {
            "type": "object",
            "properties": {
              "targetOS": {
                "type": "string",
                "description": "%task.buildOption.targetOS%",
                "examples": [
                  "linux",
                  "win32",
                  "win64",
                  "Darwin"
                ]
              },
              "targetCPU": {
                "type": "string",
                "description": "%task.buildOption.targetCPU%",
                "examples": [
                  "x86_64",
                  "aarch64",
                  "i386"
                ]
              },
              "searchPath": {
                "type": "array",
                "description": "%task.buildOption.searchPath%",
                "items": {
                  "type": "string"
                }
              },
              "libPath": {
                "type": "array",
                "description": "%task.buildOption.libPath%",
                "items": {
                  "type": "string"
                }
              },
              "unitOutputDir": {
                "type": "string",
                "description": "%task.buildOption.unitOutputDir%"
              },
              "outputFile": {
                "type": "string",
                "description": "%task.buildOption.outputFile%"
              },
              "syntaxMode": {
                "type": "string",
                "description": "%task.buildOption.syntaxMode%",
                "default": "ObjFPC",
                "examples": [
                  "fpc",
                  "Delphi",
                  "DelphiUnicode",
                  "ObjFPC"
                ]
              },
              "optimizationLevel": {
                "type": "number",
                "description": "%task.buildOption.optimizationLevel%",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4
                ]
              },
              "forceRebuild": {
                "type": "boolean",
                "description": "%task.buildOption.forceRebuild%",
                "default": false
              },
              "msgIgnore": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "description": "%task.buildOption.msgIgnore%"
              },
              "customOptions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "%task.buildOption.customOptions%"
              }
            }
          }
        }
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "fpctoolkit.project.build",
          "when": "view == FpcProjectExplorer && (viewItem==fpcbuild || viewItem==lazarusbuildmode)",
          "group": "fpcproject@1"
        },
        {
          "command": "fpctoolkit.project.rebuild",
          "when": "view == FpcProjectExplorer && (viewItem==fpcbuild || viewItem==lazarusbuildmode)",
          "group": "fpcproject@2"
        },
        {
          "command": "fpctoolkit.project.clean",
          "when": "view == FpcProjectExplorer && (viewItem==fpcbuild || viewItem==lazarusbuildmode)",
          "group": "fpcproject@3"
        },
        {
          "command": "fpctoolkit.project.setdefault",
          "when": "view == FpcProjectExplorer && (viewItem==fpcbuild || viewItem==lazarusbuildmode)",
          "group": "fpcprojectcfg@4"
        },
        {
          "command": "fpctoolkit.project.add",
          "when": "view == FpcProjectExplorer && (viewItem==fpcproject)",
          "group": "fpcproject@0"
        },
        {
          "command": "fpctoolkit.project.openWithLazarus",
          "when": "view == FpcProjectExplorer && viewItem==lazarusproject",
          "group": "lazarusproject@1"
        },
        {
          "command": "fpctoolkit.project.build",
          "when": "view == FpcProjectExplorer && (viewItem==fpcbuild || viewItem==lazarusbuildmode)",
          "group": "inline"
        }
      ],
      "view/title": [
        {
          "command": "fpctoolkit.project.newproject",
          "when": "view == FpcProjectExplorer",
          "group": "navigation",
          "icon": "$(add)"
        },
        {
          "command": "fpctoolkit.project.opentemplatedir",
          "when": "view == FpcProjectExplorer",
          "group": "navigation@1"
        },
        {
          "command": "fpctoolkit.project.inittemplatedir",
          "when": "view == FpcProjectExplorer",
          "group": "1_template"
        },
        {
          "command": "fpctoolkit.project.inittemplatedirtouser",
          "when": "view == FpcProjectExplorer",
          "group": "2_template"
        }
      ]
    },
    "configuration": [
      {
        "title": "FpcToolkit",
        "properties": {
          "fpctoolkit.searchPath": {
            "type": "array",
            "description": "%config.searchPath%",
            "items": {
              "type": "string"
            }
          },
          "fpctoolkit.libPath": {
            "type": "array",
            "description": "%config.libPath%",
            "items": {
              "type": "string"
            }
          },
          "fpctoolkit.customOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "%config.customOptions%"
          },
          "fpctoolkit.env.PP": {
            "type": "string",
            "markdownDescription": "%config.env.PP%"
          },
          "fpctoolkit.env.FPCDIR": {
            "type": "string",
            "markdownDescription": "%config.env.FPCDIR%"
          },
          "fpctoolkit.env.LAZARUSDIR": {
            "type": "string",
            "markdownDescription": "%config.env.LAZARUSDIR%"
          },
          "fpctoolkit.env.FPCTARGET": {
            "type": "string",
            "markdownDescription": "%config.env.FPCTARGET%",
            "examples": [
              "linux",
              "win32",
              "win64",
              "Darwin"
            ]
          },
          "fpctoolkit.env.FPCTARGETCPU": {
            "type": "string",
            "markdownDescription": "%config.env.FPCTARGETCPU%",
            "examples": [
              "x86_64",
              "aarch64",
              "i386"
            ]
          },
          "fpctoolkit.format.tabsize": {
            "type": "number",
            "default": 2,
            "markdownDescription": "%config.format.tabsize%"
          },
          "fpctoolkit.pasls.path": {
            "type": "string",
            "description": "%config.pasls.path%"
          },
          "fpctoolkit.format.enabled": {
            "type": "boolean",
            "default": "true",
            "description": "%config.format.enabled%"
          },
          "fpctoolkit.format.cfgpath": {
            "type": "string",
            "description": "%config.format.cfgpath%"
          },
          "fpctoolkit.debug.autoBuild": {
            "type": "boolean",
            "default": true,
            "description": "%config.debug.autoBuild%"
          },
          "fpctoolkit.lazarus.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%config.lazarus.enabled%"
          },
          "fpctoolkit.mcp.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%config.mcp.enabled%"
          },
          "fpctoolkit.mcp.autoRegister": {
            "type": "boolean",
            "default": true,
            "description": "%config.mcp.autoRegister%"
          },
          "fpctoolkit.mcp.port": {
            "type": "number",
            "default": 0,
            "description": "%config.mcp.port%"
          },
          "fpctoolkit.mcp.host": {
            "type": "string",
            "default": "localhost",
            "description": "%config.mcp.host%"
          },
          "fpctoolkit.project.templateDirectories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "%config.project.templateDirectories%"
          },
          "fpctoolkit.lazarus.preferLazbuild": {
            "type": "boolean",
            "default": true,
            "description": "%config.lazarus.preferLazbuild%"
          }
        }
      },
      {
        "title": "FpcToolkit LanguageServer",
        "properties": {
          "fpctoolkit.lsp.trace.server": {
            "scope": "window",
            "type": "string",
            "enum": [
              "off",
              "messages",
              "verbose"
            ],
            "default": "off",
            "description": "%lsp.trace.server%"
          },
          "fpctoolkit.lsp.initializationOptions.program": {
            "type": "string",
            "description": "%lsp.initializationOptions.program%"
          },
          "fpctoolkit.lsp.initializationOptions.overloadPolicy": {
            "type": "number",
            "scope": "application",
            "default": 3,
            "enum": [
              1,
              2,
              3
            ],
            "enumDescriptions": [
              "%lsp.enum.overloadPolicy_1%",
              "%lsp.enum.overloadPolicy_2%",
              "%lsp.enum.overloadPolicy_3%"
            ],
            "description": "%lsp.initializationOptions.overloadPolicy%"
          },
          "fpctoolkit.lsp.initializationOptions.maximumCompletions": {
            "type": "number",
            "default": 50,
            "markdownDescription": "%lsp.initializationOptions.maximumCompletions%"
          },
          "fpctoolkit.lsp.initializationOptions.insertCompletionsAsSnippets": {
            "type": "boolean",
            "default": false,
            "description": "%lsp.initializationOptions.insertCompletionsAsSnippets%"
          },
          "fpctoolkit.lsp.initializationOptions.insertCompletionProcedureBrackets": {
            "type": "boolean",
            "default": false,
            "description": "%lsp.initializationOptions.insertCompletionProcedureBrackets%"
          },
          "fpctoolkit.lsp.initializationOptions.includeWorkspaceFoldersAsUnitPaths": {
            "type": "boolean",
            "default": true,
            "description": "%lsp.initializationOptions.includeWorkspaceFoldersAsUnitPaths%"
          },
          "fpctoolkit.lsp.initializationOptions.includeWorkspaceFoldersAsIncludePaths": {
            "type": "boolean",
            "default": true,
            "description": "%lsp.initializationOptions.includeWorkspaceFoldersAsIncludePaths%"
          },
          "fpctoolkit.lsp.initializationOptions.checkSyntax": {
            "type": "boolean",
            "scope": "application",
            "default": false,
            "description": "%lsp.initializationOptions.checkSyntax%"
          },
          "fpctoolkit.lsp.initializationOptions.publishDiagnostics": {
            "type": "boolean",
            "scope": "application",
            "default": false,
            "description": "%lsp.initializationOptions.publishDiagnostics%"
          },
          "fpctoolkit.lsp.initializationOptions.workspaceSymbols": {
            "type": "boolean",
            "default": false,
            "description": "%lsp.initializationOptions.workspaceSymbols%"
          },
          "fpctoolkit.lsp.initializationOptions.documentSymbols": {
            "type": "boolean",
            "default": true,
            "description": "%lsp.initializationOptions.documentSymbols%"
          },
          "fpctoolkit.lsp.initializationOptions.minimalisticCompletions": {
            "type": "boolean",
            "default": false,
            "description": "%lsp.initializationOptions.minimalisticCompletions%"
          },
          "fpctoolkit.lsp.initializationOptions.showSyntaxErrors": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%lsp.initializationOptions.showSyntaxErrors%"
          }
        }
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "FpcProjectExplorer",
          "name": "FPC Projects"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "FpcProjectExplorer",
        "contents": "%views.welcome%",
        "when": "!workspace.workspaceFolders"
      }
    ],
    "problemMatchers": [
      {
        "name": "fpc",
        "owner": "external",
        "pattern": [
          {
            "regexp": "Compiling ([^\\s].*(p|pp|pas|lpr|dpr|inc))$",
            "file": 1
          },
          {
            "regexp": "^([\\w]+\\.(p|pp|pas|lpr|dpr|inc))\\((\\d+)\\,(\\d+)\\)\\s(Fatal|Error|Warning|Note):(.*)",
            "line": 3,
            "column": 4,
            "severity": 5,
            "message": 6,
            "loop": true
          }
        ]
      }
    ]
  },
  "scripts": {
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "publish": "vsce publish",
    "vscode:prepublish": "npm run -S esbuild-base -- --minify",
    "esbuild-base": "rimraf out &&  esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs  --platform=node",
    "esbuild": "npm run -S esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run -S esbuild-base -- --sourcemap --watch"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.16.0",
    "@types/fs-extra": "9.0.2",
    "fast-xml-parser": "^5.2.5",
    "fs-extra": "9.0.1",
    "vscode-languageclient": "^8.0.1",
    "vscode-nls": "^3.2.5",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.13.52",
    "@types/vscode": "^1.89.0",
    "@typescript-eslint/eslint-plugin": "^5.28.0",
    "@typescript-eslint/parser": "^5.28.0",
    "esbuild": "^0.14.23",
    "eslint": "^8.10.0",
    "glob": "^7.2.0",
    "mocha": "^9.2.1",
    "rimraf": "^3.0.2",
    "typescript": "^5.8.3"
  },
  "homepage": "https://github.com/coolchyni/fpctoolkit#readme"
}