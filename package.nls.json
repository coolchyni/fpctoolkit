{
	"project.build": "Build Project",
    "project.rebuild": "Clean and Build",
	"project.clear": "Clean Project",
    "project.open":  "Open",
    "project.newproject": "Create New Project",
    "project.newconfig": "Create New Configuration",
    "project.setdefault": "Set as Default Task",
    "task.file": "Free Pascal project file. (.lpr,.dpr)",
    "task.cwd": "Current working directory. If not set, defaults to vscode workspace directory.",
    "task.cleanExt": "Specify file extensions to clean when executing clean project. Enter * to clean all files. Default(.o,.ppu,.lfm,.a,.or,.res)",
    "task.buildOption.targetOS": "Target operating system (-T)",
    "task.buildOption.targetCPU": "Target CPU family (-P)",
    "task.buildOption.searchPath": "Unit file search path.(-Fu)",
    "task.buildOption.libPath": "Library search path.(-Fl)",
    "task.buildOption.unitOutputDir": "Unit file output path.(-FU)",
    "task.buildOption.outputFile": "Target file name.(-o)",
    "task.buildOption.syntaxMode": "Syntax mode (-M,{$mode})",
    "task.buildOption.optimizationLevel": "Code optimization level (-O)",
    "task.buildOption.customOptions": "Custom compilation options.",
    "task.buildOption.forceRebuild": "Force update all unit files and compile.(-B)",
    "task.buildOption.msgIgnore":"Specify which messages should not be displayed during compilation. Multiple error,warn,note numbers can be specified.(-vmxxx)",          
    "task.inherited":"Name of inherited task.",
    "config.searchPath": "Unit file search path.(-Fu)",
    "config.libPath": "Library search path.(-Fl)",
    "config.customOptions": "Custom options.",
    "config.env.PP": "Compiler location (i.e. `/usr/bin/fpc`, `/usr/bin/ppc386`)",
    "config.env.FPCDIR": "Free Pascal source code location e.g.:`/usr/local/share/fpcsrc`",
    "config.env.LAZARUSDIR": "Lazarus source code location e.g.:`/usr/local/share/lazsrc`",
    "config.env.FPCTARGET": "Target operating system e.g.: (`win32`,`win64`, `linux`, `darwin`)",
    "config.env.FPCTARGETCPU": "Target CPU family e.g.: `x86_64`",
    "config.pasls.path": "Pascal Language Server(pasls) file location.",
    "lsp.trace.server": "Trace communication between VS Code and pascal language server.",
    "lsp.initializationOptions.program": "Main program file. If not specified, uses current file.",
    "lsp.initializationOptions.overloadPolicy": "Specify how duplicate functions or definitions are displayed",
    "lsp.initializationOptions.maximumCompletions": "Maximum number of auto code suggestions displayed",
    "lsp.initializationOptions.insertCompletionsAsSnippets": "Function or procedure parameters automatically become template insertions",
    "lsp.initializationOptions.insertCompletionProcedureBrackets": "Automatically ignore parameters when inserting procedures or functions with parameters",
    "lsp.initializationOptions.includeWorkspaceFoldersAsUnitPaths": "Add current working directory to unit file search directories(i.e. -Fu)",
    "lsp.initializationOptions.includeWorkspaceFoldersAsIncludePaths": "Add current working directory to include directories (i.e. -Fi)",
    "lsp.initializationOptions.checkSyntax": "Perform syntax checking when files are opened and saved",
    "lsp.initializationOptions.publishDiagnostics": "Display syntax errors as diagnostic information",
    "lsp.initializationOptions.workspaceSymbols": "Allow displaying classes, functions, procedures... from workspace",
    "lsp.initializationOptions.documentSymbols": "Allow displaying classes, functions, procedures... from current document",
    "lsp.initializationOptions.minimalisticCompletions": "Auto code suggestions contain minimal information",
    "lsp.initializationOptions.showSyntaxErrors": "Show syntax error prompts in popup 'window/showMessage'",
    "lsp.enum.overloadPolicy_1": "Show multiple names",
    "lsp.enum.overloadPolicy_2": "Show only the first one",
    "lsp.enum.overloadPolicy_3": "Add numbers before names",

    "views.welcome":"No project files found.\n[Create New Project](command:fpctoolkit.project.newproject)",
    "config.format.tabsize": "Number of spaces to convert tab to.",
    "config.format.enabled": "Enable source code formatting (using Jedi).",
    "config.format.cfgpath": "Format configuration file path(jcfsettings.cfg).",
    "config.debug.autoBuild": "Automatically compile default project before debugging when files have changes",
    "config.lazarus.enabled": "Enable Lazarus project support for .lpi files and Lazarus-specific features",
    "config.mcp.enabled": "Enable Model Context Protocol (MCP) server to provide compilation command information for AI assistants",
    "config.mcp.autoRegister": "Automatically register MCP server with external applications like Claude Desktop on startup",
    "config.mcp.port": "MCP server port (0 means auto-assign)",
    "config.mcp.host": "MCP server host address",
    "project.newfromtemplate": "New Project from Template",
    "project.inittemplatedir": "Initialize Template Directory to Workspace",
    "project.inittemplatedirtouser": "Initialize Template Directory to User Space",
    "project.opentemplatedir": "Open Template Directory",
    "config.project.templateDirectories": "Custom directories to search for project templates. Can be absolute paths or relative to workspace root.",
    "config.lazarus.preferLazbuild": "Prefer lazbuild over fpc for compiling Lazarus projects when available"
}